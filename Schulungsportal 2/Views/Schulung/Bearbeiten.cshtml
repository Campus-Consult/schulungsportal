@* Bearbeiten.cshtml: Diese View entspricht der Anlegen-View, jedoch sind die Textfelder bereits mit den alten Werten der Schulung ausgefüllt.*@
@* Diese View verwendet das ViewModel "SchulungViewModel.cs"*@
@model Schulungsportal_2.ViewModels.SchulungCreateViewModel

@{
    ViewData["Title"] = "Bearbeiten";
}

<h2>Bearbeiten: @Html.DisplayFor(m => m.Titel)</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.errorMessage != null)
        {
            <p style="color: red">@ViewBag.errorMessage</p>
        }

        <div class="form-group">
            @Html.HiddenFor(m => m.SchulungGUID)
            @Html.HiddenFor(m => m.IsAbgesagt)
            @Html.HiddenFor(m => m.IsGeprüft)
        </div>
        
        @await Html.PartialAsync("_SchulungCreateEdit")

        <div class="col-md-offset-2 col-md-10">
            <p>Bitte vergessen Sie nicht nach dem Speichern die Teilnehmer mit Hilfe der Rundmailfunktion über die Änderungen zu informieren.</p>
        </div>

        @* "Speichern"- Button*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Speichern" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@* Link zurück zur Schulungs-Übersicht*@
<div>
    @Html.ActionLink("Zurück zur Schulungsübersicht", "Uebersicht")
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/schulung-edit-create.js"></script>
}