@* Index.cshtml: Diese View stellt die Übersicht aller Schulungen für den Schulungsbeauftragten in einer Tabelle dar.*@ 
@* Diese View verwendet das Model "SchulungModel.cs".*@
@model Schulungsportal_2.ViewModels.SearchResultViewModel

@{
    ViewData["Title"] = Model.titel;
}

<h2>Suchergebnisse für @Html.DisplayFor(model => model.suchAnfrage) </h2>
@if (Model.schulung == null || Model.schulung.Count() == 0)
{
    <p>Zu Ihrer Suchanfrage wurden keine Ergebnisse gefunden.</p>
}
else
{
    @*nicht mehr genutzt <p> Der Dozent @ViewData.First(d => d.Key == "search").Value hat in der Vergangenheit folgende Schulungen gehalten: </p>*@
    <table class="table">

        @* Einrichtung der Tabellen-Überschriften*@ 
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.schulung.FirstOrDefault().Titel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.schulung.FirstOrDefault().Termine.FirstOrDefault().Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.schulung.FirstOrDefault().Termine.FirstOrDefault().End)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.schulung.FirstOrDefault().OrganisatorInstitution)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.schulung.FirstOrDefault().Dozenten.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.schulung.FirstOrDefault().Ort)
            </th>
            <th class="hidden-print">
            </th>
        </tr>

        @* Tabellen-Content aus allen übergebenen SchulungModel-Objekten in die Tabelle einbetten*@ 
        @foreach (var item in Model.schulung)
        {
            <tr @if (item.IsAbgesagt) { <text> style="color:lightgray" </text>  }>
                <td>
                    @Html.DisplayFor(modelItem => item.Titel)
                    @if (item.IsAbgesagt)
                    { <text> [ABGESAGT] </text> }
                </td>
                <td>
                    @foreach (var termin in item.Termine.OrderBy(x => x.Start))
                    {
                        <div>@Html.DisplayFor(modelItem => termin.Start)</div>
                    }
                </td>
                <td>
                    @foreach (var termin in item.Termine.OrderBy(x => x.Start))
                    {
                        <div>@Html.DisplayFor(modelItem => termin.End)</div>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrganisatorInstitution)
                </td>
                <td>
                    @foreach (var dozent in item.Dozenten) {
                        <div><a href="mailto:@dozent.EMail">@Html.DisplayFor(modelItem => dozent.Name)</a></div>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ort)
                </td>
                <td class="hidden-print">
                    <a target="_blank" href="/Schulung/Details/@item.SchulungGUID">Details</a> |
                    <a target="_blank" href="/Schulung/Teilnehmerliste/@item.SchulungGUID">Teilnehmer</a>
                </td>
            </tr>
        }
    </table>
}
<input class="hidden-print btn btn-default" type="button" value="Drucken" onClick="javascript:window.print()">

<a class="hidden-print" href="/Suche/Suche">zurück zur Suche</a>